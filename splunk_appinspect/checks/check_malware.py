# Copyright 2016 Splunk Inc. All rights reserved.

"""
### Malware/viruses, malicious content, user security standards
"""

# Python Standard Libraries
import logging
import os.path
import re
import subprocess
import sys
import platform
# Third-Party Libraries
# N/A
# Custom Libraries
import splunk_appinspect.app as app
import splunk_appinspect

logger = logging.getLogger(__name__)
report_display_order = 5


@splunk_appinspect.tags('splunk_appinspect', 'offensive', 'manual')
@splunk_appinspect.cert_version(min='1.0.0')
def check_for_offensive_material(app, reporter):
    """Check that the app does not include any offensive material."""
    if platform.system() == "Windows":
        reporter.manual_check("Offensive language checks will be done manually during code review.")
    else:
        # False positives? False negatives?  You betcha. But it's a start. (And
        # that's why we warn either way.)
        likely_offensive_files = []
        for dir, filename, ext in app.iterate_files():
            for lineno, line, found, suspected in splunk_appinspect.offense.scan_file(app.get_filename(dir, filename)):
                formatted = line.replace(found, '<<<' + found.upper() + '>>>')
                if len(formatted) > 65:
                    formatted = formatted[:65] + '...'
                reporter.manual_check("{} ({}:{}) [{}]".format(
                    formatted, os.path.join(dir, filename), lineno, found), os.path.join(dir, filename), lineno)


@splunk_appinspect.tags('splunk_appinspect', 'manual')
@splunk_appinspect.cert_version(min='1.0.0')
def check_embedded_links(app, reporter):
    """Check that embedded links included in the app are not malicious."""
    reporter.manual_check("Links will be inspected during code review.")


@splunk_appinspect.tags('splunk_appinspect', 'manual')
@splunk_appinspect.cert_version(min='1.0.0')
def check_authorization_credentials(app, reporter):
    """Check that no plain text authorization credentials are stored in the 
    app.
    """
    reporter.manual_check("Code will be manually inspected during code review.")


@splunk_appinspect.tags('splunk_appinspect', 'manual')
@splunk_appinspect.cert_version(min='1.0.0')
def check_hostnames_and_ips(app, reporter):
    """Check that no sensitive hostnames/IPs are stored in the app."""
    reporter.manual_check(
        "Code will be manually inspected during code review.")
